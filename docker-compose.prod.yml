version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=hypercare
      - POSTGRES_USER=hypercare
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-hypercare_db_password}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hypercare"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3051:5173"
    environment:
      - VITE_API_URL=/api
    depends_on:
      - backend

  backend:
    build: ./backend
    restart: unless-stopped
    ports:
      - "3050:3050"
    volumes:
      - ./data:/data
    environment:
      - DATABASE_URL=postgresql://hypercare:${POSTGRES_PASSWORD:-hypercare_db_password}@postgres:5432/hypercare
      - UPLOAD_PATH=/data/uploads
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - PORT=3050
      - CHROMA_URL=http://chromadb:8000
      - NODE_ENV=production
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3051}
    depends_on:
      postgres:
        condition: service_healthy
      chromadb:
        condition: service_started

  chromadb:
    image: chromadb/chroma:latest
    restart: unless-stopped
    volumes:
      - ./data/vectors:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

volumes:
  postgres-data: